@use "sass:math";

$grid-columns: 12;
$layout-values: flex-start, flex-end, center, space-between, space-around;
$grid-gaps: (
    "0": 0,
    "1": 8px,
    "2": 16px,
    "3": 24px
);

// base layout classes
.container {
    width: 100%;
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 0;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

// justify content classes
@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

// grid gaps
@each $key,
$val in $grid-gaps {
    .gap-#{$key}>* {
        padding: $val;
    }

    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

// col classes
@include xs {
    @for $i from 1 through $grid-columns {
        .col-xs-#{$i} {
            box-sizing: border-box;
            flex-grow: 1;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-sm-#{$i} {
            box-sizing: border-box;
            flex-grow: 1;
            flex-shrink: 1;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-md-#{$i} {
            box-sizing: border-box;
            flex-grow: 1;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-lg-#{$i} {
            box-sizing: border-box;
            flex-grow: 1;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-xl-#{$i} {
            box-sizing: border-box;
            flex-grow: 1;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xxl {
    @for $i from 1 through $grid-columns {
        .col-xxl-#{$i} {
            box-sizing: border-box;
            flex-grow: 1;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}