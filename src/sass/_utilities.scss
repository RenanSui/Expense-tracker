@use 'sass:math';
$new-base-p-m: clamp(0.3rem, -0.8636rem + 5.8182vw, 0.5rem);

$utilities: (
    "padding": ("prefix": "p",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8),
    ),

    "padding-left": ("prefix": "pl",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8),
    ),

    "padding-right": ("prefix": "pr",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8),
    ),

    "padding-top": ("prefix": "pt",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8),
    ),

    "padding-bottom": ("prefix": "pb",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8),
    ),

    "margin": ("prefix": "m",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8),
    ),

    "margin-left": ("prefix": "ml",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8,
            "auto": auto),
    ),

    "margin-right": ("prefix": "mr",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8,
            "auto": auto),
    ),

    "margin-top": ("prefix": "mt",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8),
    ),

    "margin-bottom": ("prefix": "mb",
        "values": ("0": 0,
            "1": $new-base-p-m,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8),
    ),

    "display": ("prefix": "display",
        "values": ("n": none,
            "b": block,
            "f": flex,
            "i": inline,
            "i-b": inline-block)),

    "font-size": ("prefix": "font",
        "values": ("sm": $font-size-sm,
            "md": $base-font-size,
            "lg": $font-size-lg,
            "xl": $font-size-xl,
            "xxl": $font-size-xxl )),
    "border-radius": ("prefix": "rounded",
        "values": ("top": $base-border-radius $base-border-radius 0 0,
            "end": 0 $base-border-radius $base-border-radius 0,
            "bottom": 0 0 $base-border-radius $base-border-radius,
            "start": $base-border-radius 0 0 $base-border-radius,
        ))
);

// generate utility classes
@each $property,
$map in $utilities {

    // get the prefix and values from the utilities variable
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    // generate classes for every value in $values
    @each $key,
    $val in $values {

        // .m-0, .m-1, .p-2, .p-3, ...
        .#{$prefix}-#{$key} {
            #{$property}: $val;
        }
    }
}

.rounded {
    border-radius: $base-border-radius;
}